//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public ScreenPointComponent screenPoint { get { return (ScreenPointComponent)GetComponent(InputComponentsLookup.ScreenPoint); } }
    public bool hasScreenPoint { get { return HasComponent(InputComponentsLookup.ScreenPoint); } }

    public void AddScreenPoint(UnityEngine.Vector2 newValue) {
        var index = InputComponentsLookup.ScreenPoint;
        var component = CreateComponent<ScreenPointComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceScreenPoint(UnityEngine.Vector2 newValue) {
        var index = InputComponentsLookup.ScreenPoint;
        var component = CreateComponent<ScreenPointComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveScreenPoint() {
        RemoveComponent(InputComponentsLookup.ScreenPoint);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherScreenPoint;

    public static Entitas.IMatcher<InputEntity> ScreenPoint {
        get {
            if (_matcherScreenPoint == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.ScreenPoint);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherScreenPoint = matcher;
            }

            return _matcherScreenPoint;
        }
    }
}
